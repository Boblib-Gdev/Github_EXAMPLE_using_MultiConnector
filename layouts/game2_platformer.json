{
  "b": 91,
  "disableInputWhenNotFocused": true,
  "mangledName": "Game2_95platformer",
  "name": "Game2_platformer",
  "r": 82,
  "standardSortMethod": true,
  "stopSoundsOnStartup": true,
  "title": "",
  "v": 231,
  "uiSettings": {
    "grid": false,
    "gridType": "rectangular",
    "gridWidth": 32,
    "gridHeight": 32,
    "gridOffsetX": 0,
    "gridOffsetY": 0,
    "gridColor": 10401023,
    "gridAlpha": 0.8,
    "snap": false,
    "zoomFactor": 0.5843784410740933,
    "windowMask": false
  },
  "objectsGroups": [],
  "variables": [],
  "instances": [
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "CopyDebugbutton",
      "persistentUuid": "4893907e-f471-4c1f-974b-aea97b463510",
      "width": 0,
      "x": 13,
      "y": 59,
      "zOrder": 2,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "IPadressDebug",
      "persistentUuid": "3810d285-b6af-4a63-96a2-9fc0ee4f6f39",
      "width": 0,
      "x": 133,
      "y": 32,
      "zOrder": 3,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "MultiConnectorIPadressCopy",
      "persistentUuid": "7dfaf7c8-9b24-400c-b323-ebb96db328df",
      "width": 0,
      "x": 11,
      "y": 77,
      "zOrder": 4,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "Title",
      "persistentUuid": "4f496e81-8117-454b-b485-fe350b10c6d9",
      "width": 0,
      "x": 712,
      "y": 11,
      "zOrder": 5,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 64,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "1666ca33-8583-4fae-a4aa-daf6cfb24fbb",
      "width": 240,
      "x": 75,
      "y": 352,
      "zOrder": 6,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 64,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "f5635a58-da03-44f9-a013-075e4fa131d4",
      "width": 355,
      "x": 327,
      "y": 474,
      "zOrder": 6,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 64,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "819f692e-c1e2-4bb2-a528-635f17a26b16",
      "width": 443,
      "x": 749,
      "y": 396,
      "zOrder": 6,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 24,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "89dfe00f-d181-4484-b146-bbf93244aa2c",
      "width": 1399,
      "x": -59,
      "y": 665,
      "zOrder": 6,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 521,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "4f900caf-3b16-4bdb-88e2-ac2f92fe623d",
      "width": 27,
      "x": 1320,
      "y": 165,
      "zOrder": 7,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 521,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "e789e51a-d1f2-426f-98ee-c1321e679638",
      "width": 29,
      "x": -73,
      "y": 170,
      "zOrder": 7,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "Platform",
      "persistentUuid": "4f7bcca0-3b21-49e1-a508-8185d14d3e07",
      "width": 0,
      "x": 755,
      "y": 552,
      "zOrder": 8,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "keepRatio": true,
      "layer": "",
      "name": "Comment",
      "persistentUuid": "b15aeb28-6a81-4d99-a2cf-1014c5258d53",
      "width": 0,
      "x": 455,
      "y": 174,
      "zOrder": 9,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    }
  ],
  "objects": [
    {
      "adaptCollisionMaskAutomatically": true,
      "assetStoreId": "",
      "name": "PlayerPlatformer",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "PlatformerObject",
          "type": "PlatformBehavior::PlatformerObjectBehavior",
          "acceleration": 1500,
          "canGoDownFromJumpthru": true,
          "canGrabPlatforms": false,
          "canGrabWithoutMoving": true,
          "deceleration": 1500,
          "gravity": 1000,
          "ignoreDefaultControls": true,
          "jumpSpeed": 600,
          "jumpSustainTime": 0.2,
          "ladderClimbingSpeed": 150,
          "maxFallingSpeed": 700,
          "maxSpeed": 250,
          "slopeMaxAngle": 60,
          "useLegacyTrajectory": false,
          "xGrabTolerance": 10,
          "yGrabOffset": 0
        }
      ],
      "animations": [
        {
          "name": "NewSprite",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "metadata": "{\"pskl\":{}}",
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": true,
                  "image": "NewSprite3",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": [
                    [
                      {
                        "x": 15,
                        "y": 8
                      },
                      {
                        "x": 61,
                        "y": 8
                      },
                      {
                        "x": 61,
                        "y": 57
                      },
                      {
                        "x": 15,
                        "y": 57
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "CopyDebugbutton",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Copy(debug)\nclic to copy IP, then start new game in a new window, choose same game, paste IP in the P2P address, and start CLIENT",
      "font": "",
      "textAlignment": "left",
      "characterSize": 20,
      "color": {
        "b": 0,
        "g": 0,
        "r": 0
      },
      "content": {
        "bold": false,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Copy(debug)\nclic to copy IP, then start new game in a new window, choose same game, paste IP in the P2P address, and start CLIENT",
        "font": "",
        "textAlignment": "left",
        "verticalTextAlignment": "center",
        "characterSize": 20,
        "color": "0;0;0"
      }
    },
    {
      "assetStoreId": "",
      "name": "IPadressDebug",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "DEBUG IP if available...",
        "placeholder": "Touch to start typing",
        "fontResourceName": "",
        "fontSize": 20,
        "inputType": "text",
        "textColor": "0;0;0",
        "fillColor": "255;255;255",
        "fillOpacity": 255,
        "borderColor": "0;0;0",
        "borderOpacity": 255,
        "borderWidth": 1,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "",
      "name": "MultiConnectorIPadressCopy",
      "type": "MultiConnector::MultiConnectorIPadressCopy",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {}
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "Title",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Green Game (platformer)",
      "font": "",
      "textAlignment": "left",
      "characterSize": 40,
      "color": {
        "b": 6,
        "g": 100,
        "r": 23
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Green Game (platformer)",
        "font": "",
        "textAlignment": "left",
        "verticalTextAlignment": "top",
        "characterSize": 40,
        "color": "23;100;6"
      }
    },
    {
      "adaptCollisionMaskAutomatically": true,
      "assetStoreId": "",
      "name": "Platform",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "Platform",
          "type": "PlatformBehavior::PlatformBehavior",
          "canBeGrabbed": true,
          "platformType": "NormalPlatform",
          "yGrabOffset": 0
        }
      ],
      "animations": [
        {
          "name": "NewSprite",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "metadata": "{\"pskl\":{}}",
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": true,
                  "image": "NewSprite4",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": [
                    [
                      {
                        "x": 0,
                        "y": 0
                      },
                      {
                        "x": 64,
                        "y": 0
                      },
                      {
                        "x": 64,
                        "y": 64
                      },
                      {
                        "x": 0,
                        "y": 64
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "Comment",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "CONTROLS : arrows and space \n\nCOMMENTS : the clients can't control their player (with arrows), and can not see it either...   \nThey can only be seen in the main screen (and not moving).\nand when playing solo, 2 players are created.. why ??",
      "font": "",
      "textAlignment": "left",
      "characterSize": 20,
      "color": {
        "b": 0,
        "g": 0,
        "r": 0
      },
      "content": {
        "bold": false,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "CONTROLS : arrows and space \n\nCOMMENTS : the clients can't control their player (with arrows), and can not see it either...   \nThey can only be seen in the main screen (and not moving).\nand when playing solo, 2 players are created.. why ??",
        "font": "",
        "textAlignment": "left",
        "verticalTextAlignment": "top",
        "characterSize": 20,
        "color": "0;0;0"
      }
    }
  ],
  "objectsFolderStructure": {
    "folderName": "__ROOT",
    "children": [
      {
        "objectName": "PlayerPlatformer"
      },
      {
        "objectName": "Platform"
      },
      {
        "objectName": "CopyDebugbutton"
      },
      {
        "objectName": "MultiConnectorIPadressCopy"
      },
      {
        "objectName": "IPadressDebug"
      },
      {
        "objectName": "Title"
      },
      {
        "objectName": "Comment"
      }
    ]
  },
  "events": [
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "Event Structure to allow proper use of THNK extensions",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "NOTE : All these comments are taken from arthuro555  in  https://forum.gdevelop.io/t/solved-finally-how-to-use-the-thnk-example-project/42386/9"
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Welcome to the basics of the T.H.N.K. Framework! \n\nFind the complete documentation on https://thnk.arthuro555.com/ ;)\n\nThis is what a scene built upon this framework typically looks like. It has code for the server and code for the client, separated. \nThis is because the architecture of servers made with this framework is authoritative: the client is supposed to be \"dumb\", while the server is \"smart\". The server runs all the game logic itself, and the client mostly tries to display the latest data from the server as smoothly and accurately as possible. This is to make sure it is not fooled by a client lying: If we were letting clients for example run the platformer behavior and make them send their new positions afterwards, a malicious client could lie about the new position to teleport itself. With an authoritative server, cheating becomes very hard, and completely eliminates many forms of it.\n"
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "CLIENT (All events related to Client MUST be located here)",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Those events will not be run when built with cloud-gdjs."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "THNK::StartClientCode"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Messages to server",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Right"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Right\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Left\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Up"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Up\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Down"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Down\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Space"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Space\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Show server IP addres  related to P2P (debug,not using problematic (for now)  prefab IPadressCopy       TO BE IMPROVED",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                          },
                          "parameters": [
                            "IPadressDebug",
                            "Text",
                            "=",
                            "THNK_P2P::ServerID()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "CopyDebugbutton",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Clipboard::WriteText"
                          },
                          "parameters": [
                            "",
                            "THNK_P2P::ServerID()",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "Cache"
                          },
                          "parameters": [
                            "CopyDebugbutton"
                          ]
                        },
                        {
                          "type": {
                            "value": "Wait"
                          },
                          "parameters": [
                            "0.5"
                          ]
                        },
                        {
                          "type": {
                            "value": "Montre"
                          },
                          "parameters": [
                            "CopyDebugbutton",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": []
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "SERVER (All events related to Server MUST be located here)",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "THNK::StartServerCode"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Those events won't trigger on the client when connected to a server (but will also be executed normaly in single player mode, where client and server are on the same machine)"
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Connection new client",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::OnClientConnect"
                          },
                          "parameters": [
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            "Random(400) + 100",
                            "Random(400) + 100",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "THNK::LinkObjectToPlayer"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::OnClientDisconnect"
                          },
                          "parameters": [
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Message processing (collect  the controls sent by clients, and execute them by the server)",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "example of TOP-DOWN MOVEMENT commands sent by clients and executed by server  (idealy a Function would do that, by ex : SimulateClientCommandIntoServerEvents(param=Player , NameOfCommand=\"right\")"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Improvement to do later : send only commands to indicate BEGINNING and END:   example : send  BEGINNING of \"righ\"movement,  and END of  \"righ\"movement \nThis will lower the bandwidth and improve connection quality"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Right "
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Right\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::SimulateRightKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "TopDownMovement"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Left"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Left\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::SimulateLeftKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "TopDownMovement"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Up"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Up\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::SimulateUpKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "TopDownMovement"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Down"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Down\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::SimulateDownKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "TopDownMovement"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Space   (not used in this simple demo game)"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Space\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::SimulateControl"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "TopDownMovement",
                            "\"Space\""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Game logic",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Example of events creating the game logic, executed by server only (since clients are only dealing with appearance and sending commands)"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "SeparateFromObjects"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Other (empty)",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "No events should be ran outside of the server and client blocks! This can lead to all kinds of issues."
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Basic documentation",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "By default, when switching to a scene built upon the T.H.N.K. Framework, it should work normally, with the framework emulating the passing of messages between the server and client. \n\nRegardless of the server type, once connecting to a remote scene, the objects with the \"Syncchronize\" behavior, and the `State` scene variable will be downloaded from the server and applied to the scene locally. The server code will also be disabled, only letting the client code running. The server will regularly send any updates to the state variable and objects, which will be automatically applied to the scene. This makes the scene essentially managed by the server. The client code is used to forward to the server inputs made on the local client, or to manage client only objects. A client only object is an object without the synchronize behavior, it can be used for elements specific to your own client, like a pause screen, your own inventory menu, etc.\n\nThe server should manage all objects that are shared between everyone: for example, a door that can be opened and closed cannot be opened for one person and not the other, that would make no sense. Or one player object should be seen by everyone, so it should be shared too. In some cases though, you will want to make an object managed by the client. Here are a few:\n- Pause menu: A pause menu should only affect the local client, not appear for every player. Therefore, it should be managed and shown only on the players computer.\n- Information accessible only to select players: In among us, at the beginning, everyone discovers their roles, imposter or crewmate. This role display should only be known by the player themselves, and not be accessible to others. Additionally, it is specific to the client, and not shared information. Therefore, while the role of the player should be decided and managed by the server, passed onto the client using its `State.User` structure, and the display of that role should then be left to the client.\n\nThose were all of the basic concepts. Enjoy the T.H.N.K. Framework!\n\nNOTE : All these comments are taken from arthuro555  in  https://forum.gdevelop.io/t/solved-finally-how-to-use-the-thnk-example-project/42386/9"
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": []
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Events Organisation",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Client events",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "THNK::StartClientCode"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Messages to server",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Right"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Right\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Left\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "KeyPressed"
                          },
                          "parameters": [
                            "",
                            "Space"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "THNK::SendMessage"
                          },
                          "parameters": [
                            "",
                            "\"Space\"",
                            "",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Show server IP addres  related to P2P (debug,not using problematic (for now)  prefab IPadressCopy",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                          },
                          "parameters": [
                            "IPadressDebug",
                            "Text",
                            "=",
                            "THNK_P2P::ServerID()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "CopyDebugbutton",
                            "",
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "MouseButtonReleased"
                          },
                          "parameters": [
                            "",
                            "Left"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Clipboard::WriteText"
                          },
                          "parameters": [
                            "",
                            "THNK_P2P::ServerID()",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Server events",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "THNK::StartServerCode"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Connection new client",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::OnClientConnect"
                          },
                          "parameters": [
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            "Random(800) + 100",
                            "100",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "THNK::LinkObjectToPlayer"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::OnClientDisconnect"
                          },
                          "parameters": [
                            "",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Delete"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Message processing (collect  the controls sent by clients, and execute them by the server)",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "left\n"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Left\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "PlatformBehavior::SimulateLeftKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "PlatformerObject"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "right"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Right\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "PlatformBehavior::SimulateRightKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "PlatformerObject"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "space"
                    },
                    {
                      "infiniteLoopWarning": true,
                      "type": "BuiltinCommonInstructions::While",
                      "whileConditions": [
                        {
                          "type": {
                            "value": "THNK::OnMessage"
                          },
                          "parameters": [
                            "",
                            "\"Space\"",
                            "",
                            ""
                          ]
                        }
                      ],
                      "conditions": [
                        {
                          "type": {
                            "value": "THNK::UseLinkedObjects"
                          },
                          "parameters": [
                            "",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "PlatformBehavior::SimulateJumpKey"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "PlatformerObject"
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Game logic",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "SeparateFromObjects"
                          },
                          "parameters": [
                            "PlayerPlatformer",
                            "PlayerPlatformer",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    }
  ],
  "layers": [
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 3,
      "cameraType": "",
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "",
      "renderingType": "",
      "visibility": true,
      "cameras": [
        {
          "defaultSize": true,
          "defaultViewport": true,
          "height": 0,
          "viewportBottom": 1,
          "viewportLeft": 0,
          "viewportRight": 1,
          "viewportTop": 0,
          "width": 0
        }
      ],
      "effects": [
        {
          "effectType": "Scene3D::HemisphereLight",
          "name": "3D Light",
          "doubleParameters": {
            "elevation": 45,
            "intensity": 1,
            "rotation": 0
          },
          "stringParameters": {
            "groundColor": "64;64;64",
            "skyColor": "255;255;255",
            "top": "Y-"
          },
          "booleanParameters": {}
        }
      ]
    }
  ],
  "behaviorsSharedData": [
    {
      "name": "Animation",
      "type": "AnimatableCapability::AnimatableBehavior"
    },
    {
      "name": "Effect",
      "type": "EffectCapability::EffectBehavior"
    },
    {
      "name": "Flippable",
      "type": "FlippableCapability::FlippableBehavior"
    },
    {
      "name": "Opacity",
      "type": "OpacityCapability::OpacityBehavior"
    },
    {
      "name": "Platform",
      "type": "PlatformBehavior::PlatformBehavior"
    },
    {
      "name": "PlatformerObject",
      "type": "PlatformBehavior::PlatformerObjectBehavior"
    },
    {
      "name": "Resizable",
      "type": "ResizableCapability::ResizableBehavior"
    },
    {
      "name": "Scale",
      "type": "ScalableCapability::ScalableBehavior"
    },
    {
      "name": "Text",
      "type": "TextContainerCapability::TextContainerBehavior"
    }
  ]
}